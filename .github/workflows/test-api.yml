name: 🧪 Test API in Docker

on:
  push:
    branches: [ dev ]

env:
  GAME_NAME: telecasino-dice
  GAME: dice

jobs:
  build-and-test:
    name: 🛠️ Build, 🐳 Run & 🧪 Test
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗️ Build Docker image
        run: |
          docker build -t $GAME_NAME .

      - name: 🚀 Run container in background
        run: |
          docker run -d --name $GAME -p 8080:8080 $GAME_NAME
          for i in {1..10}; do
            if curl -s http://localhost:8080/health >/dev/null; then
              echo "✅ API is up!"
              break
            fi
            echo "⏳ Waiting for API to start..."
            sleep 2
          done

      - name: 🧪 Run API Tests
        run: .github/scripts/test-api.sh

      - name: 📂 Show share folder tree
        run: |
          docker exec $GAME tree /shared || echo "⚠️ No /shared folder found"

      - name: 🛑 Stop container
        if: always()
        run: docker stop $GAME

      - name: 🗑️ Remove container
        if: always()
        run: docker rm $GAME

  create-and-merge-pr:
    name: 🔀 Create & Merge PR (dev → main)
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔀 Create Pull Request
        id: cpr
        uses: repo-sync/pull-request@v2
        with:
          source_branch: "dev"
          destination_branch: "main"
          github_token: ${{ secrets.NEW_PAT }}
          pr_title: "🔀 Merge dev → main"
          pr_body: "Automated PR to merge dev into main after successful tests."
          pr_label: "auto-merge"

      - name: ✅ Merge Pull Request
        if: steps.cpr.outputs.pr_number != ''
        run: |
          gh pr merge ${{ steps.cpr.outputs.pr_number }} --merge
        env:
          GITHUB_TOKEN: ${{ secrets.NEW_PAT }}